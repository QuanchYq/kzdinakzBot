import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv
from aiogram.dispatcher.filters.state import State, StatesGroup 
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import os
from aiogram.utils.markdown import text, bold, italic, code, pre, hlink, hbold 
from aiogram.dispatcher.filters import Text
from keyboards import main_menu, admin_menu, people, Gulsim, Zhaina, Inkar, Zhanat, Nazerke, pay_pay
from libs import isAdmin, add_user, isAdminUsername, add_user_username
import json
import os
import httplib2 
import apiclient.discovery
from oauth2client.service_account import ServiceAccountCredentials	


load_dotenv()

# Set up logging
logging.basicConfig(level=logging.INFO)

token_bot = os.getenv('TOKEN')

storage = MemoryStorage()

# Replace YOUR_TOKEN with your bot token
bot = Bot(token=token_bot,parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot, storage=storage)

Admins = [695064750]



class FormStates(StatesGroup):
    name = State()
    surname = State()
    company_type = State()
    instagram_link = State()


# Left date
# Define the starting message in Kazakh
start_message = """
<b>–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑–±–µ!</b> üéâ

<b>–ò–Ω—Ç–µ–Ω—Å–∏–≤–∫–µ</b> “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! ü§ñüìö

–ö—É—Ä—Å —Ç—É—Ä–∞–ª—ã –∫”©–±—ñ—Ä–µ–∫ –±—ñ–ª—É “Ø—à—ñ–Ω <b>"–ò–Ω—Ç–µ–Ω—Å–∏–≤"</b> —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑ - —Å—ñ–∑–¥—ñ –±–∞“ì–¥–∞—Ä–ª–∞–º–∞ –∂”ô–Ω–µ —à”ô–∫—ñ—Ä—Ç—Ç–µ—Ä —Ç—É—Ä–∞–ª—ã –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä –∫“Ø—Ç–µ–¥—ñ. üìùüí°

–ñ–∞“£–∞ –±—ñ–ª—ñ–º –º–µ–Ω –∂–µ—Ç—ñ—Å—Ç—ñ–∫–∫–µ –∂–µ—Ç—É –∂–æ–ª—ã–Ω –±–∞—Å—Ç–∞—É“ì–∞ –¥–∞–π—ã–Ω—Å—ã–∑ –±–∞? üëçüí™
"""

# Define the handler for the /start command
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if message.from_user.id in Admins:
        await bot.send_message(chat_id=message.chat.id, text=start_message,
                           reply_markup=admin_menu())
    else :
        await bot.send_message(chat_id=message.chat.id, text=start_message,
                           reply_markup=main_menu())

@dp.message_handler(lambda message: message.text == 'üåü –ú–µ–Ω –∂–∞–π–ª—ã')
async def about_me(message: types.Message):
    photo = open('images/dina.jpg', 'rb')

    text = '''
<b>üëã –°”ô–ª–µ–º</b>. <i>–ú–µ–Ω—ñ –æ“õ—ã—Ä–º–∞–Ω–¥–∞—Ä—ã–º <b>–î–∏–Ω–∞</b> –¥–µ–ø –∞—Ç–∞–π–¥—ã.</i> ü§ó

üôç‚Äç‚ôÄÔ∏è <b>–ñ–∞—Å—ã 29-–¥–∞.</b> 
üåè <b>–ê–ª–º–∞—Ç—ã</b> “õ–∞–ª–∞—Å—ã–Ω–¥–∞ —Ç—É—ã–ª“ì–∞–Ω
. üèô

<i>2012 ‚Äî 2013 –∂–∂</i> 
<b>–®—ã“£–∂–∞“£ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞–ª—ã“õ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ.</b>

<i>2013‚àí2014 –∂–∂</i> 
<b>Tongji University - “ö—ã—Ç–∞–π —Ç—ñ–ª—ñ –∫—É—Ä—Å—Ç–∞—Ä—ã</b>

<i>2014‚àí2016 –∂–∂</i> 
<b>“õ—ã—Ç–∞–π & –∞“ì—ã–ª—à—ã–Ω —Ç—ñ–ª–¥–µ—Ä—ñ–Ω—ñ“£ –º“±“ì–∞–ª—ñ–º—ñ</b>

<i>2016‚àí2020 –∂–∂</i> 
<b>–§—É–¥–∞–Ω —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ - –ë–∞–∫–∞–ª–∞–≤—Ä</b>

<i>2020‚àí2023 –∂–∂</i> 
<b>–¢–∏–∫–¢–æ–∫ —ç–∫—Å–ø–µ—Ä—Ç</b>

'''
    await bot.send_photo(chat_id=message.chat.id, photo=photo , caption=text, parse_mode='HTML')

@dp.message_handler(lambda message: message.text == 'üéì –®”ô–∫—ñ—Ä—Ç—Ç–µ—Ä')
async def add_review(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text='–®”ô–∫—ñ—Ä—Ç—Ç–µ—Ä–¥—ñ “õ–æ—Å—É “Ø—à—ñ–Ω –±—ñ–∑–¥—ñ“£ –∫–∞–Ω–∞–ª—ã–º—ã–∑“ì–∞ –∂—ñ–±–µ—Ä—ñ“£—ñ–∑',
                           reply_markup=people())

@dp.callback_query_handler(lambda c: c.data == 'gulsim')
async def gulsim(callback_query: types.CallbackQuery):
    photo_gulsim = open('images/gulsim.jpeg', 'rb')
    text = """
üë©: <b>–ì“Ø–ª—Å–∏–º</b>

üèÜ: <i>üíÑüåü –ö–æ—Ä–µ–π –∫–æ—Å–º–µ—Ç–∏–∫–∞—Å—ã –º–µ–Ω –ø–∞—Ä—Ñ—é–º–µ—Ä–∏—è—Å—ã–Ω–¥–∞ –∂–µ—Ç–µ–∫—à—ñ —Å”ô—Ç—Ç—ñ –±–∏–∑–Ω–µ—Å.</i>

<i>üè¢üíº ”®–∑—ñ–Ω—ñ“£ 3 “õ–∞–±–∞—Ç—Ç—ã –∂–∞–ª“ì–∞ –±–µ—Ä—ñ–ª–µ—Ç—ñ–Ω “ì–∏–º–∞—Ä–∞—Ç—ã.</i>

<i>üìà Instagram-–¥–∞ 18,2 –º—ã“£ –¥–∞–Ω–∞–¥–∞ –∂–∞–∑—ã–ª—É—à—ã—Å—ã –±–∞—Ä.</i>

<i>üëóüë† –ö–∏—ñ–º –º–µ–Ω –∞—è“õ –∫–∏—ñ–º–¥–µ—Ä–¥—ñ —Å–∞—Ç—É –º–∞–≥–∞–∑—ã–Ω—ã–Ω –∞—à—É –ø–ª–∞–Ω–¥–∞—Ä—ã –±–∞—Ä!</i>
    """
    photo = open('images/gulsim.jpeg', 'rb')
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=photo , caption=text, parse_mode='HTML', reply_markup=Gulsim())

@dp.callback_query_handler(lambda c: c.data == 'zhaina')
async def zhaina(callback_query: types.CallbackQuery):
    photo = open('images/zhaina.jpg', 'rb')
    text = """
üë©: <b>–ñ–∞–π–Ω–∞</b>

üèÜ: <i>üëô  –Ü—à –∫–∏—ñ–º, –ø–∏–∂–∞–º–∞ –∂”ô–Ω–µ –ø–µ–Ω—é–∞—Ä –¥“Ø–∫–µ–Ω—ñ.</i>

<i>üìà TikTok-—Ç–∞ 31 –º—ã“£ –∂–∞–∑—ã–ª—É—à—ã –±–∞—Ä.</i>

<i>üåç –ë“Ø–∫—ñ–ª ”ô–ª–µ–º –±–æ–π—ã–Ω—à–∞ –∂–µ—Ç–∫—ñ–∑—É.</i>

"""
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=photo , caption=text, parse_mode='HTML', reply_markup=Zhaina())


@dp.callback_query_handler(lambda c: c.data == 'inkar')
async def inkar(callback_query: types.CallbackQuery):
    photo = open('images/inkar.jpg', 'rb')
    text = """
üë©: <b>–ò–Ω–∫–∞—Ä</b>

üèÜ: <i>üëú –°”©–º–∫–µ–ª–µ—Ä, –∞—è“õ –∫–∏—ñ–º –∂”ô–Ω–µ –∫–æ—Å–º–µ—Ç–∏–∫–∞ –¥“Ø–∫–µ–Ω—ñ.</i>

<i>üìà 8-–º—ã“£–Ω–∞–Ω –∞—Å—Ç–∞–º –∂–∞–∑—ã–ª—É—à—ã–ª–∞—Ä.</i>

"""
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=photo , caption=text, parse_mode='HTML', reply_markup=Inkar())

@dp.callback_query_handler(lambda c: c.data == 'zhanat')
async def inkar(callback_query: types.CallbackQuery):
    photo = open('images/zhanat.jpg', 'rb')
    text = """
üë©: <b>–ñ–∞–Ω–∞—Ç</b>

üõçÔ∏è: <i>–ö”©–π–ª–µ–∫ –º–µ–Ω —Å—É–º–∫–∞–ª–∞—Ä–¥—ã —Å–∞—Ç—É –¥“Ø–∫–µ–Ω—ñ.</i>

üìà: <i>Instagram-–¥–∞ 15-–º—ã“£–Ω–∞–Ω –∞—Å—Ç–∞–º –∂–∞–∑—ã–ª—É—à—ã—Å—ã –±–∞—Ä.</i>
"""
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=photo , caption=text, parse_mode='HTML', reply_markup=Zhanat())

@dp.callback_query_handler(lambda c: c.data == 'nazerke')
async def inkar(callback_query: types.CallbackQuery):
    photo = open('images/nazerke.jpg', 'rb')
    text = """
üë©: <b>–ù–∞–∑–µ—Ä–∫–µ</b>

üõçÔ∏è: <i>“ö–∞–∑–∞“õ—Å—Ç–∞–Ω–¥—ã“õ –º–µ—Ä—á: —Ö—É–¥–∏, —Å–≤–∏—Ç—à–æ—Ç—Ç–∞—Ä, –∂“Ø–π—Ä—ñ–∫.</i>

üåç: <i>”ò–ª–µ–º –±–æ–π—ã–Ω—à–∞ –∂–µ—Ç–∫—ñ–∑—É.</i>

üìà: <i>Instagram-–¥–∞ 48 –º—ã“£ –¥–∞–Ω–∞–¥–∞–Ω –∞—Å—Ç–∞–º –∂–∞–∑—ã–ª—É—à—ã—Å—ã –±–∞—Ä.</i>
"""
    await bot.send_photo(chat_id=callback_query.from_user.id, photo=photo , caption=text, parse_mode='HTML', reply_markup=Nazerke())



@dp.message_handler(lambda message: message.text == 'üí≥ –¢”©–ª–µ–º')
async def pay(message: types.Message):
    text = """
üëã –ë—ñ–∑–¥—ñ“£ <b>–ò–Ω—Ç–µ–Ω—Å–∏–≤—ñ–º—ñ–∑–≥–µ</b> “õ–æ—Å—ã–ª—ã“£—ã–∑! ü§©

üí∞ <i>–¢”©–º–µ–Ω–¥–µ–≥—ñ —Å—ñ–ª—Ç–µ–º–µ–Ω—ñ –ø–∞–π–¥–∞–ª–∞–Ω—ã–ø, <b>–ò–Ω—Ç–µ–Ω—Å–∏–≤–∫–µ</b> –∂–∞–∑—ã–ª—ã“£—ã–∑!:</i>
<u>üìé https://pay.kaspi.kz/pay/96v0sicr</u>

‚úÖ –¢”©–ª–µ–º–Ω–µ–Ω –∫–µ–π—ñ–Ω ”©–∑—ñ“£—ñ–∑ –∂–∞–π–ª—ã –∞“õ–ø–∞—Ä–∞—Ç “õ–∞–ª–¥—ã—Ä—ã“£—ã–∑! üôå
    """
    await bot.send_message(message.chat.id,text, parse_mode='HTML', reply_markup=pay_pay(), disable_web_page_preview=True)

@dp.callback_query_handler(lambda c: c.data == 'info')
async def name(callback_query: types.CallbackQuery, ):
    await FormStates.name.set()
    await callback_query.message.edit_text("üí≠ –ê—Ç—ã“£—ã–∑–¥—ã —Ç–µ—Ä—ñ“£—ñ–∑")


@dp.message_handler(state=FormStates.name)
async def ask_surname(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text
    await FormStates.surname.set()
    await message.answer("üë§ –¢–µ–≥—ñ“£—ñ–∑–¥—ñ —Ç–µ—Ä—ñ“£—ñ–∑")

@dp.message_handler(state=FormStates.surname)
async def ask_company_type(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['surname'] = message.text
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton('–¢–û–û'))
    keyboard.add(KeyboardButton('–ò–ü'))
    keyboard.add(KeyboardButton('–ë–∞—Å“õ–∞'))
    await FormStates.company_type.set()
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏", reply_markup=keyboard)

@dp.message_handler(Text(equals=['–¢–û–û', '–ò–ü', '–ë–∞—Å“õ–∞']), state=FormStates.company_type)
async def ask_instagram_link(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['company_type'] = message.text
    await FormStates.instagram_link.set()
    await message.answer("–ò–Ω—Å—Ç–∞–≥—Ä–∞–º –ª–∏–Ω–∫—ñ“£—ñ–∑–¥—ñ —Ç–µ—Ä—ñ“£—ñ–∑")

@dp.message_handler(state=FormStates.instagram_link)
async def finish_form(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['instagram_link'] = message.text
        form_data = data
    await state.finish()
    await message.answer("–§–æ—Ä–º–∞ —Ç–æ–ª—Ç—ã—Ä—ã–ª–¥—ã!", reply_markup=main_menu())
    CREDENTIALS_FILE = 'courses.json'  # –ò–º—è —Ñ–∞–π–ª–∞ —Å –∑–∞–∫—Ä—ã—Ç—ã–º –∫–ª—é—á–æ–º, –≤—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–µ

# –ß–∏—Ç–∞–µ–º –∫–ª—é—á–∏ –∏–∑ —Ñ–∞–π–ª–∞
    credentials = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive'])

    httpAuth = credentials.authorize(httplib2.Http()) # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ
    service = apiclient.discovery.build('sheets', 'v4', http = httpAuth) # –í—ã–±–∏—Ä–∞–µ–º —Ä–∞–±–æ—Ç—É —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏ 4 –≤–µ—Ä—Å–∏—é API 

    spreadsheetId = '1RM7f67tIk_cfua6vN1pauR7VhEiS62zFsLgWj-i9gYc'
    raw = [
        [form_data['name'],form_data['surname'],form_data['company_type'],form_data['instagram_link']]
    ]
    body = {
        'values' : raw
    }

    results = service.spreadsheets().values().append(
        spreadsheetId=spreadsheetId,
        range="–õ–∏—Å—Ç1",
        valueInputOption="USER_ENTERED",
        body=body
    ).execute()




class response(StatesGroup):
    response = State()

@dp.message_handler(lambda message: message.text == 'üîë –î–æ—Å—Ç—É–ø –±–µ—Ä—É' )
async def admin_only(message: types.Message):
    await response.response.set()
    user_id = message.from_user.id
    if user_id in Admins:
        await message.answer('üîì –î–æ—Å—Ç—É–ø –±–µ—Ä—É “Ø—à—ñ–Ω –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã–Ω –Ω–∏–∫—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.')
    else:
        await message.answer('üóùÔ∏è –°—ñ–∑–¥—ñ“£ “õ“±“õ—ã“ì—ã“£—ã–∑ –∂–æ“õ!')

@dp.message_handler(state=response.response)
async def echo(message: types.Message, state: FSMContext):
    text = """
üéâ <b>–ò–Ω—Ç–µ–Ω—Å–∏–≤“õ–∞ —Å”ô—Ç—Ç—ñ –∂–∞–∑—ã–ª–¥—ã“£—ã–∑!</b> üéâ

<b>üìÖ –ö“Ø–Ω—ñ:</b><i> 2023 –∂—ã–ª“ì—ã 15 –º–∞–º—ã—Ä</i>
<b>üïê –£–∞“õ—ã—Ç—ã:</b> <i>10: 00 - 16: 00</i>
<b>üìç –û—Ä—ã–Ω:</b><i>"–ü–ª–∞–Ω–µ—Ç–∞" –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª—ã</i>

<b>–£–∞“õ—ã—Ç—ã–Ω–¥–∞ –∫–µ–ª—É–¥—ñ –∂”ô–Ω–µ “õ–∞—Ä“õ—ã–Ω–¥—ã–ª—ã“õ “Ø—à—ñ–Ω –±–∞—Ä–ª—ã“õ “õ–∞–∂–µ—Ç—Ç—ñ –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä–¥—ã –∞–ª—ã–ø –∂“Ø—Ä—É–¥—ñ “±–º—ã—Ç–ø–∞“£—ã–∑. –ë—ñ–∑ —Å—ñ–∑–¥—ñ –∫“Ø—Ç–µ–º—ñ–∑ –∂”ô–Ω–µ —Å–∞–±–∞“ì—ã–º—ã–∑–¥—ã –±–∞—Å—Ç–∞—É“ì–∞ –¥–∞–π—ã–Ω–±—ã–∑! üí™ üë®‚Äçüè´    
    </b>
"""
    if message.from_user.id in Admins:
        if message.text:
            async with state.proxy() as data:
                data['user_id'] = ''
                user_mes = message.text
                await add_user(user_mes)
                await bot.send_message(chat_id=user_mes, text=text)
            await state.finish()
        else:
            await message.answer('“ö–∞—Ç–µ ID, “õ–∞–π—Ç–∞–¥–∞–Ω –∫”©—Ä—ñ“£—ñ–∑')
    else:
        await message.answer('üîì –°—ñ–∑–¥—ñ“£ “õ“±“õ—ã“ì—ã“£—ã–∑ –∂–æ“õ!')



@dp.message_handler(lambda message: message.text == 'üìö –ò–Ω—Ç–µ–Ω—Å–∏–≤')
async def course(message: types.Message):
    text = """
<b>–ò–Ω—Ç–µ–Ω—Å–∏–≤—Ç–∞–Ω –Ω–µ –∫“Ø—Ç—É–≥–µ –±–æ–ª–∞–¥—ã? üéâ</b>

<i>
‚Ä¢ <b>–ê–ø—Ç–∞—Å—ã–Ω–∞ 3 —Ä–µ—Ç 2 —Å–∞“ì–∞—Ç—Ç–∞–Ω, TikTok-—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç—ã“£—ã–∑–¥—ã –¥–∞–º—ã—Ç—É ‚è∞</b>.

‚Ä¢ <b>–ê–ª“ì–∞—à“õ—ã 1000 –æ“õ—ã—Ä–º–∞–Ω –∂–∏–Ω–∞—ÉüìàüíØ</b>.

‚Ä¢ <b>–¢—ñ–∫–µ–ª–µ–π —ç—Ñ–∏—Ä–¥–µ –æ“õ—ã—Ä–º–∞–Ω “±—Å—Ç–∞–ø “õ–∞–ª—Éüë•üí¨</b>.

‚Ä¢ <b>TikTok-—Ç–∞ —Å–∞—Ç—É–¥—ã “Ø–π—Ä–µ–Ω—É! ü§ë</b>

‚Ä¢ <b>TikTok-—Ç–∞ —Å–∞—Ç—É“ì–∞ –±–æ–ª–∞—Ç—ã–Ω —Ç–æ–≤–∞—Ä–ª–∞—Ä —Ç—ñ–∑—ñ–º—ñ</b>

‚Ä¢ <b>“ö–∞–Ω–¥–∞–π ”ô—Ä–µ–∫–µ—Ç—Ç–µ—Ä –¢–∏–∫—Ç–æ–∫ –±–∞–Ω“ì–∞ ”ô–∫–µ–ª–µ–¥—ñ?üîç</b>.

‚Ä¢ <b>TikTok-—Ç–∞ –Ω–∏—à–∞“£—ã–∑–¥—ã –∂“Ø—Ä–≥—ñ–∑—É.</b>.

‚Ä¢ <b>üîù TikTok-—Ç–∞ —Å–∞—Ç—ã–ª—ã–º–¥—ã 2—Ö –∫”©–±–µ–π—Ç—É –∂–æ–ª–¥–∞—Ä—ã.</b>.</i>

<b>‚úÖ"”®—Ç–∫–µ–Ω –∏–Ω—Ç–µ–Ω—Å–∏–≤—ñ–º—ñ–∑–¥–µ–Ω —Ç–∞–±—ã—Å –∂–µ—Ç—ñ–ª–≥–µ–Ω —à”ô–∫—ñ—Ä—Ç—Ç–µ—Ä–¥—ñ“£ –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ–Ω –∞–ª—É “Ø—à—ñ–Ω <u>üéì –®”ô–∫—ñ—Ä—Ç—Ç–µ—Ä</u> –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑.</b>"
"""
    await bot.send_message(message.chat.id, text, parse_mode='HTML')

# Start the bot
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
